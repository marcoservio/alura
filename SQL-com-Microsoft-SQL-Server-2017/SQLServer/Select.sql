SELECT TOP (1000) [CPF]
      ,[NOME]
      ,[ENDERECO 1]
      ,[ENDERECO 2]
      ,[BAIRRO]
      ,[CIDADE]
      ,[ESTADO]
      ,[CEP]
      ,[DATA DE NASCIMENTO]
      ,[IDADE]
      ,[SEXO]
      ,[LIMITE DE CREDITO]
      ,[VOLUME DE COMPRA]
      ,[PRIMEIRA COMPRA]
  FROM [SUCOS_VENDAS].[dbo].[TABELA DE CLIENTES];

SELECT * FROM [TABELA DE CLIENTES];

SELECT CPF, NOME FROM [TABELA DE CLIENTES];

SELECT [CPF] AS IDENTIFICADOR,
[NOME] AS CLIENTE
FROM [TABELA DE CLIENTES];

SELECT [NOME] AS CLIENTE,
[CPF] AS IDENTIFICADOR
FROM [TABELA DE CLIENTES];

SELECT * FROM [TABELA DE PRODUTOS];

SELECT * FROM [TABELA DE PRODUTOS] WHERE [CODIGO DO PRODUTO] = '1000889';

SELECT * FROM [TABELA DE PRODUTOS] WHERE [SABOR] = 'Limão';

SELECT * FROM [TABELA DE PRODUTOS] WHERE EMBALAGEM = 'PET';

SELECT * FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] > 10;

SELECT * FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] < 10;

SELECT * FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] <= 4.555;

SELECT * FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] >= 4.555;

SELECT * FROM [TABELA DE PRODUTOS] WHERE EMBALAGEM <= 'Lata';

SELECT * FROM [TABELA DE PRODUTOS] WHERE EMBALAGEM <> 'Lata';

SELECT * FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] <> 4.555;

SELECT * FROM [TABELA DE CLIENTES];

SELECT * FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] = '1995-09-11';

SELECT * FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] > '1995-09-11'; 

SELECT * FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] >= '1995-09-11'; 

SELECT * FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] < '1995-09-11';

SELECT * FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] <= '1995-09-11';

SELECT * FROM [TABELA DE CLIENTES] WHERE YEAR([DATA DE NASCIMENTO]) = 1995;

SELECT * FROM [TABELA DE CLIENTES] WHERE YEAR([DATA DE NASCIMENTO]) < 1995;

SELECT * FROM [TABELA DE CLIENTES] WHERE MONTH([DATA DE NASCIMENTO]) = 9;

SELECT * FROM [TABELA DE CLIENTES] WHERE DAY([DATA DE NASCIMENTO]) = 11;

-- AND

-- TRUE AND TRUE = TRUE
-- FALSE AND TRUE = FALSE
-- TRUE AND FALSE = FALSE
-- FALSE AND FALSE = FALSE

-- OR

-- TRUE AND TRUE = TRUE
-- FALSE AND TRUE = TRUE
-- TRUE AND FALSE = TRUE 
-- FALSE AND FALSE = FALSE

-- NOT 

-- INVERTE O VALOR DO RESULTADO SE FOR TRUE VAI PRA FALSE

-- IN

-- TRAZ TODO MUNDO QUE ESTA NA CONDIÇÃO IN('MANGA', 'LARANJA')

SELECT * FROM [TABELA DE CLIENTES] WHERE DAY([DATA DE NASCIMENTO]) = 12;

SELECT * FROM [TABELA DE CLIENTES] WHERE DAY([DATA DE NASCIMENTO]) = 12
AND BAIRRO = 'Tijuca';

SELECT * FROM [TABELA DE CLIENTES] WHERE DAY([DATA DE NASCIMENTO]) = 12
OR BAIRRO = 'Tijuca';

SELECT * FROM [TABELA DE CLIENTES] WHERE YEAR([DATA DE NASCIMENTO]) = 1995
AND SEXO = 'M';

SELECT * FROM [TABELA DE CLIENTES] WHERE YEAR([DATA DE NASCIMENTO]) = 1995
OR SEXO = 'M';

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
[SABOR] = 'Manga' OR [TAMANHO] = '700 ml';

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
[SABOR] = 'Manga' AND [TAMANHO] = '700 ml';

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
NOT ([SABOR] = 'Manga' AND [TAMANHO] = '700 ml');

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
NOT ([SABOR] = 'Manga' OR [TAMANHO] = '700 ml');

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
[SABOR] = 'Manga' AND NOT ( [TAMANHO] = '700 ml');

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
[SABOR] IN ('Manga', 'Laranja');

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
[SABOR] = 'Manga' OR [SABOR] ='Laranja';

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
[SABOR] NOT IN ('Manga', 'Laranja');

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
NOT ([SABOR] = 'Manga' OR [SABOR] ='Laranja');

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
[SABOR] IN ('Manga', 'Laranja') AND [PREÇO DE LISTA] > 10;

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
[SABOR] IN ('Manga', 'Laranja') AND [PREÇO DE LISTA] BETWEEN 10 AND 13;

SELECT * FROM [TABELA DE PRODUTOS] WHERE 
[SABOR] IN ('Manga', 'Laranja') AND [PREÇO DE LISTA] >= 10 AND [PREÇO DE LISTA] <= 13;

SELECT *  FROM [ITENS NOTAS FISCAIS] 
WHERE [QUANTIDADE] > 60 AND [PREÇO] <= 3;

SELECT * FROM [ITENS NOTAS FISCAIS];

SELECT * FROM [TABELA DE PRODUTOS] WHERE [NOME DO PRODUTO] LIKE '%Limão';

SELECT * FROM [TABELA DE PRODUTOS] WHERE [NOME DO PRODUTO] LIKE 'Litros%';

SELECT * FROM [TABELA DE PRODUTOS] WHERE [NOME DO PRODUTO] LIKE '%Litros%'; -- COMEÇA E TERMINA

SELECT * FROM [TABELA DE PRODUTOS] WHERE [NOME DO PRODUTO] LIKE '%Linha'; -- TERMINA

SELECT * FROM [TABELA DE PRODUTOS] WHERE [NOME DO PRODUTO] LIKE 'Linha%'; -- COMEÇA

SELECT * FROM [TABELA DE PRODUTOS] WHERE [NOME DO PRODUTO] LIKE '%Litros%' AND [SABOR] = 'Laranja';

SELECT * FROM [TABELA DE CLIENTES] WHERE NOME LIKE '%Mattos';

SELECT EMBALAGEM, TAMANHO FROM [TABELA DE PRODUTOS];

SELECT DISTINCT EMBALAGEM, TAMANHO FROM [TABELA DE PRODUTOS];

SELECT DISTINCT EMBALAGEM, TAMANHO FROM [TABELA DE PRODUTOS] WHERE
[SABOR] = 'Laranja';

SELECT DISTINCT EMBALAGEM, TAMANHO, SABOR FROM [TABELA DE PRODUTOS];

SELECT DISTINCT BAIRRO FROM [TABELA DE CLIENTES]
WHERE CIDADE = 'Rio de Janeiro';

SELECT TOP(10) * FROM [ITENS NOTAS FISCAIS];

SELECT TOP 3 * FROM [TABELA DE PRODUTOS];

SELECT * FROM [TABELA DE PRODUTOS] WHERE SABOR = 'Laranja';

SELECT TOP 3 * FROM [TABELA DE PRODUTOS] WHERE SABOR = 'Laranja';

SELECT EMBALAGEM, TAMANHO FROM [TABELA DE PRODUTOS];

SELECT DISTINCT EMBALAGEM, TAMANHO FROM [TABELA DE PRODUTOS];

SELECT DISTINCT TOP 3 EMBALAGEM, TAMANHO FROM [TABELA DE PRODUTOS];

SELECT TOP 10 * FROM [NOTAS FISCAIS] WHERE DATA = '2017-01-01';

-- ASC (DO MENOR PARA O MAIOR) -> PADRÃO
-- DESC (DO MAIOR PARA O MENOR)

SELECT * FROM [TABELA DE PRODUTOS];

SELECT * FROM [TABELA DE PRODUTOS] ORDER BY [PREÇO DE LISTA];

SELECT * FROM [TABELA DE PRODUTOS] ORDER BY [PREÇO DE LISTA] DESC;

SELECT * FROM [TABELA DE PRODUTOS] ORDER BY [NOME DO PRODUTO];

SELECT EMBALAGEM, [NOME DO PRODUTO] FROM [TABELA DE PRODUTOS] ORDER BY EMBALAGEM, [NOME DO PRODUTO];

SELECT EMBALAGEM, [NOME DO PRODUTO] FROM [TABELA DE PRODUTOS] ORDER BY EMBALAGEM, [NOME DO PRODUTO] DESC;

SELECT EMBALAGEM, [NOME DO PRODUTO] FROM [TABELA DE PRODUTOS] ORDER BY EMBALAGEM, [NOME DO PRODUTO] ASC;

SELECT * FROM [TABELA DE PRODUTOS] WHERE [NOME DO PRODUTO] = 'Linha Refrescante - 1 Litro - Morango/Limão';

SELECT TOP 1000 * FROM [ITENS NOTAS FISCAIS] WHERE [CODIGO DO PRODUTO] = '1101035' ORDER BY QUANTIDADE DESC;

-- SUM -> OPERAÇÕES MATEMATICAS
-- MAX -> MAXIMO
-- MIN -> MINIMO
-- AVG -> MEDIA
--COUNT -> CONTAR NUMERO DE OCORRÊNCIAS

SELECT * FROM [TABELA DE CLIENTES];

SELECT ESTADO, [LIMITE DE CREDITO] FROM [TABELA DE CLIENTES];

SELECT ESTADO, SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] GROUP BY ESTADO;

SELECT ESTADO, AVG([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] GROUP BY ESTADO;

SELECT EMBALAGEM, MAX([PREÇO DE LISTA]) FROM [TABELA DE PRODUTOS] GROUP BY EMBALAGEM;

SELECT EMBALAGEM, MIN([PREÇO DE LISTA]) FROM [TABELA DE PRODUTOS] GROUP BY EMBALAGEM;

SELECT EMBALAGEM, COUNT(*) FROM [TABELA DE PRODUTOS] GROUP BY EMBALAGEM;

SELECT BAIRRO, SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES]
WHERE [ESTADO] = 'SP' GROUP BY BAIRRO;

SELECT BAIRRO, SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES]
WHERE [ESTADO] = 'SP' GROUP BY BAIRRO ORDER BY BAIRRO DESC;

SELECT BAIRRO, ESTADO, SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES]
WHERE [ESTADO] = 'SP' GROUP BY BAIRRO, ESTADO;

SELECT BAIRRO, ESTADO, SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES]
WHERE [ESTADO] = 'SP' GROUP BY BAIRRO; -- ERRO. TODOS OS CAMPOS INSERIDOS TEM QUE ESTAR NO GROUP BY TAMBÉM

SELECT COUNT(*) FROM [ITENS NOTAS FISCAIS] WHERE [CODIGO DO PRODUTO] = '1101035' AND QUANTIDADE = 99;

SELECT BAIRRO, ESTADO, SUM([LIMITE DE CREDITO]) AS [SOMA LIMITE] FROM [TABELA DE CLIENTES]
WHERE [ESTADO] = 'SP' GROUP BY BAIRRO, ESTADO HAVING SUM([LIMITE DE CREDITO]) >= 140000;

SELECT * FROM [TABELA DE CLIENTES];

SELECT ESTADO, SUM([LIMITE DE CREDITO]) AS [SOMA LIMITE] FROM [TABELA DE CLIENTES] GROUP BY ESTADO;

SELECT ESTADO, SUM([LIMITE DE CREDITO]) AS [SOMA LIMITE] FROM [TABELA DE CLIENTES] GROUP BY ESTADO
HAVING SUM([LIMITE DE CREDITO]) >= 850000;

SELECT EMBALAGEM, SUM([PREÇO DE LISTA]) AS [SOMA PREÇO],
MAX([PREÇO DE LISTA]) AS [PREÇO MAXIMO], 
MIN([PREÇO DE LISTA]) AS [PREÇO MINIMO]
FROM [TABELA DE PRODUTOS] GROUP BY EMBALAGEM;

SELECT EMBALAGEM,
MAX([PREÇO DE LISTA]) AS [PREÇO MAXIMO], 
MIN([PREÇO DE LISTA]) AS [PREÇO MINIMO]
FROM [TABELA DE PRODUTOS] 
GROUP BY EMBALAGEM
HAVING  SUM([PREÇO DE LISTA]) <= 80;

SELECT EMBALAGEM,
MAX([PREÇO DE LISTA]) AS [PREÇO MAXIMO], 
MIN([PREÇO DE LISTA]) AS [PREÇO MINIMO]
FROM [TABELA DE PRODUTOS] 
GROUP BY EMBALAGEM
HAVING  SUM([PREÇO DE LISTA]) <= 80
AND MAX([PREÇO DE LISTA]) >= 6;

SELECT CPF, COUNT(*) AS [NUMERO DE COMPRAS] 
FROM [NOTAS FISCAIS]
WHERE YEAR(DATA) = 2016
GROUP BY CPF
HAVING COUNT(*) > 2000;

SELECT [NOME DO PRODUTO],
CASE
WHEN [PREÇO DE LISTA] >= 12 THEN 'PRODUTO CARO'
WHEN [PREÇO DE LISTA] >= 7 AND [PREÇO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
ELSE 'PRODUTO BARATO'
END AS CLASSIFICAÇÃO,
AVG([PREÇO DE LISTA]) AS [MEDIA PREÇO]
FROM [TABELA DE PRODUTOS]
GROUP BY [NOME DO PRODUTO],
CASE
WHEN [PREÇO DE LISTA] >= 12 THEN 'PRODUTO CARO'
WHEN [PREÇO DE LISTA] >= 7 AND [PREÇO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
ELSE 'PRODUTO BARATO'
END;

SELECT YEAR(DATA), COUNT(*) FROM [NOTAS FISCAIS] GROUP BY YEAR(DATA);

SELECT [NOME], [DATA DE NASCIMENTO],
CASE
WHEN YEAR([DATA DE NASCIMENTO]) <= 1990 THEN 'ADULTOS'
WHEN YEAR([DATA DE NASCIMENTO]) BETWEEN 1990 AND 1995 THEN 'JOVENS'
ELSE 'CRIANÇA'
END AS CLASSIFICAÇÃO 
FROM [TABELA DE CLIENTES];

-- INNER JOIN -> RESULTADOS COMUNS ENTRE AS DUAS TABELAS
-- LEFT JOIN -> TODOS OS RESULTADOS DA TABELA DA ESQUERDA(ANTES DO COMANDO JOIN) E OS RESULTADOS CORRESPONDENTE DA OUTRA TABELA
-- RIGHT JOIN -> TODOS OS RESULTADOS DA TABELA DA ESQUERDA(DEPOIS DO COMANDO JOIN) E OS RESULTADOS CORRESPONDENTE DA OUTRA TABELA
-- FULL JOIN -> TODAS -> TODOS OS DADOS DAS TABELAS ONDE NÃO TEM CORRESPONDECIA FICA NULL
-- CROSS JOIN -> ANALIZE COMBINATORIAS DOS REGISTROS -> SELECT A.NOME, B.HOBBY FROM TABLE_ESQUERDA A, TABELA_DIREITA B

SELECT * FROM [TABELA DE VENDEDORES];

SELECT * FROM [NOTAS FISCAIS];

SELECT * FROM [TABELA DE VENDEDORES] INNER JOIN [NOTAS FISCAIS] 
ON [TABELA DE VENDEDORES].MATRICULA = [NOTAS FISCAIS].MATRICULA;

SELECT * FROM [TABELA DE VENDEDORES] A INNER JOIN [NOTAS FISCAIS] B
ON A.MATRICULA = B.MATRICULA;

SELECT A.MATRICULA, A.NOME, COUNT(*) FROM [TABELA DE VENDEDORES] A 
INNER JOIN [NOTAS FISCAIS] B ON A.MATRICULA = B.MATRICULA
GROUP BY A.MATRICULA, A.NOME;

SELECT A.MATRICULA, A.NOME, YEAR(DATA), COUNT(*) FROM [TABELA DE VENDEDORES] A 
INNER JOIN [NOTAS FISCAIS] B ON A.MATRICULA = B.MATRICULA
GROUP BY A.MATRICULA, A.NOME, YEAR(DATA)
ORDER BY A.NOME;

SELECT A.MATRICULA, A.NOME, YEAR(DATA), COUNT(*) FROM [TABELA DE VENDEDORES] A 
INNER JOIN [NOTAS FISCAIS] B ON A.MATRICULA = B.MATRICULA
GROUP BY A.MATRICULA, A.NOME, YEAR(DATA)
ORDER BY YEAR(DATA), A.NOME;

SELECT A.MATRICULA, A.NOME, YEAR(DATA), COUNT(*) FROM [TABELA DE VENDEDORES] A 
INNER JOIN [NOTAS FISCAIS] B ON A.MATRICULA = B.MATRICULA
GROUP BY A.MATRICULA, A.NOME, YEAR(DATA)
ORDER BY A.NOME, YEAR(DATA);

-- OLD SCHOOL
SELECT * FROM [TABELA DE VENDEDORES], [NOTAS FISCAIS]
WHERE [TABELA DE VENDEDORES].MATRICULA = [NOTAS FISCAIS].MATRICULA;

SELECT YEAR(NF.DATA) AS ANO,
SUM(INF.QUANTIDADE * INF.PREÇO) AS FATURAMENTO
FROM [NOTAS FISCAIS] NF INNER JOIN [ITENS NOTAS FISCAIS] INF
ON NF.NUMERO = INF.NUMERO
GROUP BY YEAR(NF.DATA);

SELECT * FROM [TABELA DE CLIENTES] C INNER JOIN
[NOTAS FISCAIS] N ON C.CPF = N.CPF;

SELECT C.NOME, COUNT(*) FROM [TABELA DE CLIENTES] C INNER JOIN
[NOTAS FISCAIS] N ON C.CPF = N.CPF
GROUP BY C.NOME;

SELECT C.NOME, COUNT(*) FROM [TABELA DE CLIENTES] C LEFT JOIN
[NOTAS FISCAIS] N ON C.CPF = N.CPF
GROUP BY C.NOME; -- 1 == NULL

SELECT C.CPF, C.NOME, COUNT(*) FROM [TABELA DE CLIENTES] C LEFT JOIN
[NOTAS FISCAIS] N ON C.CPF = N.CPF
GROUP BY C.CPF, C.NOME;

SELECT * FROM [NOTAS FISCAIS] WHERE CPF = '95939180787';

SELECT * FROM [TABELA DE VENDEDORES];

SELECT * FROM [TABELA DE CLIENTES];

SELECT V.BAIRRO, C.BAIRRO FROM [TABELA DE VENDEDORES] V
INNER JOIN [TABELA DE CLIENTES] C
ON V.BAIRRO = C.BAIRRO;

SELECT V.NOME AS [NOME VENDEDOR], V.BAIRRO,
C.NOME AS [NOME CLIENTE], C.BAIRRO
FROM [TABELA DE VENDEDORES] V
RIGHT JOIN [TABELA DE CLIENTES] C
ON V.BAIRRO = C.BAIRRO;

SELECT V.NOME AS [NOME VENDEDOR], V.BAIRRO,
C.NOME AS [NOME CLIENTE], C.BAIRRO
FROM [TABELA DE VENDEDORES] V
FULL JOIN [TABELA DE CLIENTES] C
ON V.BAIRRO = C.BAIRRO;

SELECT V.BAIRRO, C.BAIRRO
FROM [TABELA DE VENDEDORES] V
CROSS JOIN [TABELA DE CLIENTES] C;

-- UNION -> JUNTA DUAS CONSULTAS CAMPOS DO MESMO TIPO SE TIVER DOIS IGUAIS SO FICA UM
-- UNION ALL -> JUNTA DUAS CONSULTAS CAMPOS DO MESMO TIPO SE TIVER DOIS IGUAIS FICA OS DOIS

SELECT DISTINCT C.BAIRRO FROM [TABELA DE CLIENTES] C;

SELECT DISTINCT V.BAIRRO FROM [TABELA DE VENDEDORES] V;

SELECT DISTINCT C.BAIRRO FROM [TABELA DE CLIENTES] C
UNION
SELECT DISTINCT V.BAIRRO FROM [TABELA DE VENDEDORES] V;

SELECT DISTINCT C.BAIRRO FROM [TABELA DE CLIENTES] C
UNION ALL
SELECT DISTINCT V.BAIRRO FROM [TABELA DE VENDEDORES] V;

SELECT DISTINCT C.BAIRRO, C.[DATA DE NASCIMENTO] FROM [TABELA DE CLIENTES] C
UNION ALL
SELECT DISTINCT V.BAIRRO, V.NOME FROM [TABELA DE VENDEDORES] V; -- ERRO TIPOS DIFERENTES

SELECT DISTINCT C.BAIRRO, C.NOME FROM [TABELA DE CLIENTES] C
UNION ALL
SELECT DISTINCT V.BAIRRO, V.NOME FROM [TABELA DE VENDEDORES] V;

SELECT DISTINCT C.BAIRRO, C.NOME, 'CLIENTE' FROM [TABELA DE CLIENTES] C
UNION ALL
SELECT DISTINCT V.BAIRRO, V.NOME, 'VENDEDOR' FROM [TABELA DE VENDEDORES] V;

SELECT NOME, BAIRRO FROM [TABELA DE CLIENTES];

SELECT NOME, BAIRRO FROM [TABELA DE CLIENTES]
WHERE BAIRRO IN(SELECT BAIRRO FROM [TABELA DE VENDEDORES]);

SELECT EMBALAGEM, MAX([PREÇO DE LISTA]) FROM [TABELA DE PRODUTOS]
GROUP BY EMBALAGEM;

SELECT N.EMBALAGEM, N.MAX_PRECO
FROM(SELECT EMBALAGEM, MAX([PREÇO DE LISTA]) AS MAX_PRECO FROM [TABELA DE PRODUTOS] GROUP BY EMBALAGEM) N
WHERE N.MAX_PRECO <= 5;

SELECT CPF, COUNT(*) FROM [NOTAS FISCAIS]
WHERE YEAR(DATA) = 2016
GROUP BY CPF
HAVING COUNT(*) > 2000;

SELECT N.CPF, N.QUANTIDADE 
FROM(SELECT CPF, COUNT(*) AS QUANTIDADE FROM [NOTAS FISCAIS]
WHERE YEAR(DATA) = 2016
GROUP BY CPF) N
WHERE N.QUANTIDADE > 2000;

SELECT N.EMBALAGEM, N.MAX_PRECO
FROM(SELECT EMBALAGEM, MAX([PREÇO DE LISTA]) AS MAX_PRECO FROM [TABELA DE PRODUTOS] GROUP BY EMBALAGEM) N
WHERE N.MAX_PRECO <= 5;

SELECT EMBALAGEM, MAX([PREÇO DE LISTA]) AS MAX_PRECO FROM [TABELA DE PRODUTOS] GROUP BY EMBALAGEM;

SELECT * FROM [dbo].[VW_EMBALAGENS];

SELECT N.EMBALAGEM, N.MAX_PRECO
FROM VW_EMBALAGENS N
WHERE N.MAX_PRECO <= 5;

